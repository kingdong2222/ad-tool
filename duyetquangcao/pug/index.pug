extends layout.pug

//- Setting
block setting
	- var layout = true
	- var loading = true
	- var tooltip = true
	- var modal = false
	- var popup = true

block head
	include head.pug

block pages
	- bodyC.push("")
	- layoutClasses.push("ad-form")
	- bodyClasses.push("page-content has-cover-fixed")

//- Add Body
block body
	include page/_home.pug

//- Add Tooltip
block tooltip
	include page/tooltip.pug

//- Add Popup
block popup
	//- include page/popup_location.pug

block javaScripts extend
	script.
		$(".func-tooltip-1").click(function(){
			$("body").addClass("overlay-tooltip");
			$("#tooltip-id-ad").addClass("is-show");
		});
		$(".func-tooltip-2").click(function(){
			$("body").addClass("overlay-tooltip");
			$("#tooltip-phone").addClass("is-show");
		});
		
		$(".func-close-tooltip").click(function(){
			$("body").removeClass("overlay-tooltip");
			$(".tooltip-container").removeClass("is-show");
		});
		new Picker(document.querySelector('.js-date-picker'),{
			format: 'D/MM/YYYY HH:mm',
			text: {
				title: 'Chọn ngày sinh',
			}
		});

		//- tắt loading[test]
		setTimeout(function(){$('.layer-loading').removeClass("is-active")},1000)

		/* Read More JS */
		const ReadMore = (() => {
		let s;

		return {
			settings() {
			return {
				content: document.querySelectorAll('.js-read-more'),
				originalContentArr: [],
				truncatedContentArr: [],
				moreLink: "Xem thêm",
				lessLink: "Thu gọn",
			}
			},

			init() {
			s = this.settings();
			this.bindEvents();
			},

			bindEvents() {
			ReadMore.truncateText();
			},

			/**
			* Count Words
			* Helper to handle word count.
			* @param {string} str - Target content string.
			*/
			countWords(str) {
			return str.split(/\s+/).length;
			},

			/**
			* Ellpise Content
			* @param {string} str - content string.
			* @param {number} wordsNum - Number of words to show before truncation.
			*/
			ellipseContent(str, wordsNum) {
			return str.split(/\s+/).slice(0, wordsNum).join(' ') + '...';
			},

			truncateText() {

			for (let i = 0; i < s.content.length; i++) {
				//console.log(s.content)
				const originalContent = s.content[i].innerHTML;
				const numberOfWords = s.content[i].dataset.rmWords;
				const truncateContent = ReadMore.ellipseContent(originalContent, numberOfWords);
				const originalContentWords = ReadMore.countWords(originalContent);

				s.originalContentArr.push(originalContent);
				s.truncatedContentArr.push(truncateContent);

				if (numberOfWords < originalContentWords) {
				s.content[i].innerHTML = s.truncatedContentArr[i];
				let self = i;
				ReadMore.createLink(self)
				}
			}
			ReadMore.handleClick(s.content);
			},

			/**
			* Create Link
			* Creates and Inserts Read More Link
			* @param {number} index - index reference of looped item
			*/
			createLink(index) {
			const linkWrap = document.createElement('span');

			linkWrap.className = 'read-more-link-wrap';

			linkWrap.innerHTML = `<a id="read-more_${index}"
										class="read-more-link"
										style="cursor:pointer;">
										${s.moreLink}
									</a>`;

			// Inset created link
			s.content[index].parentNode.insertBefore(linkWrap, s.content[index].nextSibling);

			},

			/**
			* Handle Click
			* Toggle Click eve
			*/
			handleClick(el) {
			const readMoreLink = document.querySelectorAll('.read-more-link');

			for (let j = 0, l = readMoreLink.length; j < l; j++) {

				readMoreLink[j].addEventListener('click', function() {

				const moreLinkID = this.getAttribute('id');
				let index = moreLinkID.split('_')[1];

				el[index].classList.toggle('is-expanded');

				if (this.dataset.clicked !== 'true') {
					el[index].innerHTML = s.originalContentArr[index];
					this.innerHTML = s.lessLink;
					this.dataset.clicked = true;
				} else {
					el[index].innerHTML = s.truncatedContentArr[index];
					this.innerHTML = s.moreLink;
					this.dataset.clicked = false;
				}
				});
			}
			},

			/**
			* Open All
			* Method to expand all instances on the page.
			* Will probably be useful with a destroy method.
			*/
			openAll() {
			const instances = document.querySelectorAll('.read-more-link');
				for (let i = 0; i < instances.length; i++) {
				content[i].innerHTML = s.truncatedContentArr[i];
				instances[i].innerHTML = s.moreLink;
				}
			}
			}
		})();
		//export default ReadMore;
		ReadMore.init();

		let id_ad = document.getElementById('id-ad')
		let mobile = document.getElementById('mobile')
		let date_ad = document.getElementById('datetime_ad')

		let empty_id = 'Vui lòng nhập ID quảng cáo cần hỗ trợ duyệt'
		let empty_mobile = 'Vui lòng nhập Số điện thoại tài khoản quảng cáo'
		let empty_date = 'Vui lòng chọn Thời gian gửi duyệt quảng cáo'
		let wrong_mobile = 'Số điện thoại không hợp lệ'

		$('#submit-form').click(() => {
			// window.location = 'welcome.html'
			validateFunc()
		})

		let validateFunc = () => {
			$("#submit-form").attr("disabled", "disabled")
			$('#submit-form').addClass('loading')
			setTimeout(() => {
				if (id_ad.value) {
					if (mobile.value) {
						if (mobile.value.length >= 9) {
							if (date_ad.value) {
								postToGG(id_ad.value,mobile.value,date_ad.value)
							} else {
								alert(empty_date)
								$("#submit-form").attr("disabled", false)
								$('#submit-form').removeClass('loading')
							}
						} else {
							alert(wrong_mobile)
							$("#submit-form").attr("disabled", false)
							$('#submit-form').removeClass('loading')
						}
					} else {
						alert(empty_mobile)
						$("#submit-form").attr("disabled", false)
						$('#submit-form').removeClass('loading')
					}
				} else {
					alert(empty_id)
					$("#submit-form").attr("disabled", false)
					$('#submit-form').removeClass('loading')
				}
			},500)
		}

		let postToGG = (id, mobile, datetime) => {
			$.ajax({
				url: "https://docs.google.com/forms/d/e/1FAIpQLScwpsHeMVQEUcaBWdTZWNsMQBAhfw6khEpcHV4sGbfXEaam5A/formResponse?",
				data: { "entry.1650827513": id, "entry.1311280625": mobile, "entry.850776665": datetime},
				type: "POST",
				dataType: "jsonp",
				success: function (d) {
					console.log('success')
					$('#submit-form').removeClass('loading')
					window.location = 'thankyou.html'
				},
				error: function (x, y, z) {
					console.log('error')
					$('#submit-form').removeClass('loading')
					window.location = 'thankyou.html'
				}
			});
		}